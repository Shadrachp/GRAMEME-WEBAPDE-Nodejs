/**
 * Copyright (c) 2016 - 2018 Sqreen. All Rights Reserved.
 * Please refer to our terms for more information: https://www.sqreen.io/terms.html
 */
'use strict';
const Fs = require('fs');
const Path = require('path');

const Mkdirp = require('mkdirp');
const WAP = require('../backend/wreckAsPromised');

const Metric = require('./index');
const Util = require('./util');

const Log = require('../logger');

const writerr = function (err) {

    Log.WARN('Failed REVEAL REPORT: ' + err.message);
};

let writeHTTP;
let writeFile;

module.exports = class extends Metric {

    add(key, value, date) {

        if (writeHTTP) {
            const data = JSON.parse(value);
            WAP.POST(process.env.REVEAL_OUTPUT, {}, data)
                .catch(writerr);
        }
        if (writeFile) {
            const data = JSON.parse(value);
            const path = Path.join(process.cwd(), process.env.REVEAL_OUTPUT);
            Mkdirp.mkdirP(path, () => {

                try {
                    Fs.writeFileSync(Path.join(path, data.injection.uuid + '') + '.json' , JSON.stringify(data, null, 2));
                }
                catch (err) {
                    writerr(err);
                }
            });
        }
        key = Util.getKey(key);
        this.process(date);
        this.currentValue[key] = this.currentValue[key] || [];
        this.currentValue[key].push(value);
    }
};

const init = module.exports.init = function () {

    writeHTTP = typeof process.env.REVEAL_OUTPUT === 'string' && process.env.REVEAL_OUTPUT.startsWith('https');
    writeFile = typeof process.env.REVEAL_OUTPUT === 'string' && !writeHTTP;
};

init();
